alltotdat$datetime <-  mdy_hm(allmandat$Date.Time..GMT.07.00)
alltotdat$datetime <-  mdy_hm(alltotdat$Date.Time..GMT.07.00)
str(alltotdat)
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))
str(alltotdat)
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv")
)
str(alltotdat)
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temperature_C, Dissolved_Oxygen_mg_l, Site, Tide..ft.)
str(alltotdat)
alltotdat$datetime <-  mdy_hm(alltotdat$Date.Time..GMT.07.00)
View(alltotdat)
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temperature_C, Dissolved_Oxygen_mg_l, Site, Tide..ft.)
alltotdat$datetime <-  mdy_hm(alltotdat$Date.Time..GMT.07.00)
View(alltotdat)
alltotdat$datetime <-  mdy_hm(alltotdat$Date.Time..GMT.07.00)
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temperature_C, Dissolved_Oxygen_mg_l, Site, Tide..ft.)
alltotdat$datetime <-  mdy_hm(alltotdat$Date.Time..GMT.07.00)
View(alltotdat)
alltotdat <- alltotdat %>% mutate(datetime = parse_date_time(Date.Time..GMT.07.00, orders = c("mdy_hm", "ymd_hm")))
alltotdat <- alltotdat %>% mutate(datetime = parse_date_time(Date.Time..GMT.07.00, orders = c("mdy_HM", "ymd_HM")))
View(alltotdat)
str(alltotdat)
alltotdat$date <- as.Date(alltotdat$datetime)
totav <- alltotdat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temperature_C, Dissolved_Oxygen_mg_l,   Temperature_C, Site, Tide..ft.)
alltotdat$date <- as.Date(alltotdat$datetime)
alltotdat <- alltotdat %>%
mutate(datetime = parse_date_time(Date.Time..GMT.07.00, orders = c("mdy_HM", "ymd_HM")))#Checks both date formats
alltotdat$date <- as.Date(alltotdat$datetime)
#Load packages
library(tidyverse)
library(here)
library(lubridate)
#
# To obtain water levels for this study, tidal predictions were sourced from the NOAA tidal station Rocky Point, Eld Inlet (TWC1115). Predicted high and low tide data, including the corresponding heights and times, were extracted for the study period. These data were then used to interpolate water levels at finer temporal resolution for the target location.
# The high and low tide times and water levels were processed in R to generate a continuous time series. Specifically, cubic spline interpolation was applied to predict water levels at 15-minute intervals between the recorded high and low tide values. This method assumes a smooth, continuous change in water levels between high and low tides, aligning with established tidal patterns.
# To validate the interpolation, the generated water levels were compared against the recorded high and low tide data. For downstream analyses, these interpolated water levels were matched to additional observational datasets by finding the closest corresponding timestamp. The final dataset was used to assess temporal variations in water levels relative to environmental and biological parameters.
# This approach provides an accurate and high-resolution estimate of water levels for locations where continuous tidal monitoring data are not available.
#Read in the high and low data from eld inlet
raw_data23 <- read.table(here("Data/Tides/2023_ELD_TWC1115_annual.txt"),
skip = 18,
header = TRUE,
sep = "",
stringsAsFactors = FALSE) %>%
mutate(Date = ymd(Date))
#Create averages
##read in the data
allthorndat <- read.csv(here("Data","thorn_Do_Temp.csv"))
allcheldat <- read.csv(here("Data","allthorndat_tides.csv"))
allhooddat <- read.csv(here("Data","hood_Do_Temp.csv"))
allmandat <- read.csv(here("Data","man_Do_Temp.csv"))
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temperature_C, Dissolved_Oxygen_mg_l,   Temperature_C, Site, Tide..ft.)
#REad in the water level data for Eld and Thorndyke
thorntides <- read.csv(here())
eldtides <- read.csv(here())
#Set the first column as date
allthorndat$datetime <- mdy_hm(allthorndat$Date.Time..GMT.07.00)
allcheldat$datetime  <- mdy_hm(allcheldat$Date.Time..GMT.07.00)
allhooddat$datetime  <- mdy_hm(allhooddat$Date.Time..GMT.07.00)
allmandat$datetime  <- mdy_hm(allmandat$Date.Time..GMT.07.00)
alltotdat <- alltotdat %>%
mutate(datetime = parse_date_time(Date.Time..GMT.07.00, orders = c("mdy_HM", "ymd_HM")))#Checks both date formats
#add a site column to each of the DFs
allcheldat <- allcheldat %>% mutate(Site = "Chelsea")
allthorndat <- allthorndat %>% mutate(Site = "Thorndyke")
allhooddat <- allhooddat %>% mutate(Site = "Hood_Head")
allmandat <- allmandat %>% mutate(Site = "Manchester")
#add a date column to the two dfs
allcheldat$date <- as.Date(allcheldat$datetime)
allthorndat$date <- as.Date(allthorndat$datetime)
allhooddat$date <- as.Date(allhooddat$datetime)
allmandat$date <- as.Date(allmandat$datetime)
alltotdat$date <- as.Date(alltotdat$datetime)
#calculate averages
#Need to do Chelsea and totten Do seperatley becaue the times when the sensors were exposed need to be removed
chelav <- allcheldat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
thornav <- allthorndat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
manav <- allmandat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
hoodav <- allhooddat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
totav <- alltotdat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temperature_C, Dissolved_Oxygen_mg_l, Temperature_C, Site, Tide..ft.)
str(alltotdat)
#Create averages
##read in the data
allthorndat <- read.csv(here("Data","thorn_Do_Temp.csv"))
allcheldat <- read.csv(here("Data","allthorndat_tides.csv"))
allhooddat <- read.csv(here("Data","hood_Do_Temp.csv"))
allmandat <- read.csv(here("Data","man_Do_Temp.csv"))
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temperature_C, Dissolved_Oxygen_mg_l, Temperature_C, Site, Tide..ft.)
#Set the first column as date
allthorndat$datetime <- mdy_hm(allthorndat$Date.Time..GMT.07.00)
allcheldat$datetime  <- mdy_hm(allcheldat$Date.Time..GMT.07.00)
allhooddat$datetime  <- mdy_hm(allhooddat$Date.Time..GMT.07.00)
allmandat$datetime  <- mdy_hm(allmandat$Date.Time..GMT.07.00)
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temp_C, Dissolved_Oxygen_mg_l, Temperature_C, Site, Tide..ft.)
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temp_C, Dissolved_Oxygen_mg_l, Site, Tide..ft.)
#Set the first column as date
allthorndat$datetime <- mdy_hm(allthorndat$Date.Time..GMT.07.00)
allcheldat$datetime  <- mdy_hm(allcheldat$Date.Time..GMT.07.00)
allhooddat$datetime  <- mdy_hm(allhooddat$Date.Time..GMT.07.00)
allmandat$datetime  <- mdy_hm(allmandat$Date.Time..GMT.07.00)
alltotdat <- alltotdat %>%
mutate(datetime = parse_date_time(Date.Time..GMT.07.00, orders = c("mdy_HM", "ymd_HM")))#Checks both date formats
#add a site column to each of the DFs
allcheldat <- allcheldat %>% mutate(Site = "Chelsea")
allthorndat <- allthorndat %>% mutate(Site = "Thorndyke")
allhooddat <- allhooddat %>% mutate(Site = "Hood_Head")
allmandat <- allmandat %>% mutate(Site = "Manchester")
#add a date column to the two dfs
allcheldat$date <- as.Date(allcheldat$datetime)
allthorndat$date <- as.Date(allthorndat$datetime)
allhooddat$date <- as.Date(allhooddat$datetime)
allmandat$date <- as.Date(allmandat$datetime)
alltotdat$date <- as.Date(alltotdat$datetime)
#calculate averages
#Need to do Chelsea and totten Do seperatley becaue the times when the sensors were exposed need to be removed
chelav <- allcheldat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
thornav <- allthorndat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
manav <- allmandat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
hoodav <- allhooddat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
totav <- alltotdat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
str(allcheldat)
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temp_C, Dissolved_Oxygen_mg_l, Site, Tide..ft.) %>%
mutate(DO_mgL = Dissolved_Oxygen_mg_l)
alltotdat <- alltotdat %>%
mutate(datetime = parse_date_time(Date.Time..GMT.07.00, orders = c("mdy_HM", "ymd_HM")))#Checks both date formats
alltotdat$date <- as.Date(alltotdat$datetime)
#calculate averages
#Need to do Chelsea and totten Do seperatley becaue the times when the sensors were exposed need to be removed
chelav <- allcheldat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
thornav <- allthorndat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
manav <- allmandat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
hoodav <- allhooddat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
totav <- alltotdat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
#Get the averages for the DO at the sites that were above the water.
chelav <- allcheldat %>% filter(water_level < 100) %>% group_by(date) %>%summarise(meanDO=mean(DO_mgL, na.rm = TRUE)))
#Get the averages for the DO at the sites that were above the water.
chelav <- allcheldat %>% filter(water_level < 100) %>% group_by(date) %>%summarise(meanDO=mean(DO_mgL, na.rm = TRUE))
View(chelav)
#Get the averages for the DO at the sites that were above the water.
chelav <- allcheldat %>% filter(water_level > -2) %>% group_by(date) %>% summarise(meanDO=mean(DO_mgL, na.rm = TRUE))
View(chelav)
chelav <- allcheldat %>% filter(water_level > -2)
View(chelav)
View(totav)
View(alltotdat)
str(alltotdat)
stre(allcheldat)
str(allcheldat)
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temp_C, Dissolved_Oxygen_mg_l, Site, Tide..ft.) %>%
mutate(DO_mgL = Dissolved_Oxygen_mg_l,
water_level = Tide..ft. )
#Set the first column as date
allthorndat$datetime <- mdy_hm(allthorndat$Date.Time..GMT.07.00)
allcheldat$datetime  <- mdy_hm(allcheldat$Date.Time..GMT.07.00)
allhooddat$datetime  <- mdy_hm(allhooddat$Date.Time..GMT.07.00)
allmandat$datetime  <- mdy_hm(allmandat$Date.Time..GMT.07.00)
alltotdat <- alltotdat %>%
mutate(datetime = parse_date_time(Date.Time..GMT.07.00, orders = c("mdy_HM", "ymd_HM")))#Checks both date formats
#add a site column to each of the DFs
allcheldat <- allcheldat %>% mutate(Site = "Chelsea")
allthorndat <- allthorndat %>% mutate(Site = "Thorndyke")
allhooddat <- allhooddat %>% mutate(Site = "Hood_Head")
allmandat <- allmandat %>% mutate(Site = "Manchester")
#add a date column to the two dfs
allcheldat$date <- as.Date(allcheldat$datetime)
allthorndat$date <- as.Date(allthorndat$datetime)
allhooddat$date <- as.Date(allhooddat$datetime)
allmandat$date <- as.Date(allmandat$datetime)
alltotdat$date <- as.Date(alltotdat$datetime)
#calculate averages
#Need to do Chelsea and totten Do seperatley becaue the times when the sensors were exposed need to be removed
chelav <- allcheldat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
thornav <- allthorndat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
manav <- allmandat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
hoodav <- allhooddat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
totav <- alltotdat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
#Get the averages for the DO at the sites that were above the water.
# chelav <- allcheldat %>% filter(water_level > -2) %>% group_by(date) %>% summarise(meanDO=mean(DO_mgL, na.rm = TRUE)) #NEED TO GET THE HEIGHT OF THE SENSOR HERE
totav <- alltotdat %>% filter()
#Only caclulate the days I want
chelav <- chelav %>% filter(date > "2023-06-05")
thornav <- thornav %>% filter(date > "2023-06-05")
hoodav <- hoodav %>% filter(date > "2023-06-05")
manav <- manav %>% filter(date > "2023-06-05")
#calculate cumulative degree days
chelav$degdays <- cumsum(chelav$meantemp)
thornav$degdays <- cumsum(thornav$meantemp)
#Get the averages for the DO at the sites that were above the water.
# chelav <- allcheldat %>% filter(water_level > -2) %>% group_by(date) %>% summarise(meanDO=mean(DO_mgL, na.rm = TRUE)) #NEED TO GET THE HEIGHT OF THE SENSOR HERE
totav <- alltotdat %>% filter()
View(totav)
View(allcheldat)
chelav <- allcheldat %>% filter(water_level < -0.5)
View(chelav)
#calculate averages
#Need to do Chelsea and totten Do seperatley becaue the times when the sensors were exposed need to be removed
chelav <- allcheldat %>% group_by(date) %>% summarise(
meantemp = mean(Temp_C, na.rm = TRUE),
meanDO = mean(DO_mgL[water_level > -0.5], na.rm = TRUE)#Filtered to only obtain data when the sensor was wet
)
totav <- alltotdat %>% group_by(date) %>% summarise(
meantemp = mean(Temp_C, na.rm = TRUE),
meanDO = mean(DO_mgL[water_level > -2], na.rm = TRUE)
)
thornav <- allthorndat %>% group_by(date) %>% summarise(
meantemp = mean(Temp_C, na.rm = TRUE),
meanDO = mean(DO_mgL[water_level > -2], na.rm = TRUE)
)
#Create averages
##read in the data
allthorndat <- read.csv(here("Data","allthonrdat_tides.csv"))
#Create averages
##read in the data
allthorndat <- read.csv(here("Data","allthorndat_tides.csv"))
allcheldat <- read.csv(here("Data","allcheldat_tides.csv"))
allhooddat <- read.csv(here("Data","hood_Do_Temp.csv"))
allmandat <- read.csv(here("Data","man_Do_Temp.csv"))
#Create averages
##read in the data
allthorndat <- read.csv(here("Data","allthorndat_tides.csv"))
allcheldat <- read.csv(here("Data","allcheldat_tides.csv"))
allcheldat <- read.csv(here("Data","allelddat_tides.csv"))
allhooddat <- read.csv(here("Data","hood_Do_Temp.csv"))
allmandat <- read.csv(here("Data","man_Do_Temp.csv"))
alltotdat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temp_C, Dissolved_Oxygen_mg_l, Site, Tide..ft.) %>%
mutate(DO_mgL = Dissolved_Oxygen_mg_l,
water_level = Tide..ft. )
#Set the first column as date
allthorndat$datetime <- mdy_hm(allthorndat$Date.Time..GMT.07.00)
allcheldat$datetime  <- mdy_hm(allcheldat$Date.Time..GMT.07.00)
allhooddat$datetime  <- mdy_hm(allhooddat$Date.Time..GMT.07.00)
allmandat$datetime  <- mdy_hm(allmandat$Date.Time..GMT.07.00)
alltotdat <- alltotdat %>%
mutate(datetime = parse_date_time(Date.Time..GMT.07.00, orders = c("mdy_HM", "ymd_HM")))#Checks both date formats
#add a site column to each of the DFs
allcheldat <- allcheldat %>% mutate(Site = "Chelsea")
allthorndat <- allthorndat %>% mutate(Site = "Thorndyke")
allhooddat <- allhooddat %>% mutate(Site = "Hood_Head")
allmandat <- allmandat %>% mutate(Site = "Manchester")
#add a date column to the two dfs
allcheldat$date <- as.Date(allcheldat$datetime)
allthorndat$date <- as.Date(allthorndat$datetime)
allhooddat$date <- as.Date(allhooddat$datetime)
allmandat$date <- as.Date(allmandat$datetime)
alltotdat$date <- as.Date(alltotdat$datetime)
#calculate averages
#Need to do Chelsea and totten Do seperatley becaue the times when the sensors were exposed need to be removed
chelav <- allcheldat %>% group_by(date) %>% summarise(
meantemp = mean(Temp_C, na.rm = TRUE),
meanDO = mean(DO_mgL[water_level > -0.5], na.rm = TRUE)#Filtered to only obtain data when the sensor was wet
)
totav <- alltotdat %>% group_by(date) %>% summarise(
meantemp = mean(Temp_C, na.rm = TRUE),
meanDO = mean(DO_mgL[water_level > -2], na.rm = TRUE)
)
thornav <- allthorndat %>% group_by(date) %>% summarise(
meantemp = mean(Temp_C, na.rm = TRUE),
meanDO = mean(DO_mgL[water_level > -2], na.rm = TRUE)
)
manav <- allmandat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
hoodav <- allhooddat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
#Only caclulate the days I want
chelav <- chelav %>% filter(date > "2023-06-05")
thornav <- thornav %>% filter(date > "2023-06-05")
hoodav <- hoodav %>% filter(date > "2023-06-05")
manav <- manav %>% filter(date > "2023-06-05")
#calculate cumulative degree days
chelav$degdays <- cumsum(chelav$meantemp)
thornav$degdays <- cumsum(thornav$meantemp)
#Add site to the average dfs
chelav <- chelav %>% mutate(Site = "Chelsea")
thornav <- thornav %>% mutate(Site = "Thorndyke")
manlav <- manav %>% mutate(Site = "Manchester")
hoodav <- hoodav %>% mutate(Site = "Hood_Head")
#merge the two sites temperature data to plot
alldat <- bind_rows(allcheldat, allthorndat, allmandat, allhooddat)
allavdat <- bind_rows(chelav, thornav, hoodav, manav)
dailyaverages <- alldat
alldat$date <- as.Date(alldat$datetime)
averagetemps <- alldat %>% group_by(date, Site) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
averageDO <- alldat %>% group_by(date, Site) %>% summarise(meanDO=mean(DO_mgL, na.rm = TRUE))
#Plot DO
avergage_DO_plot <- averageDO %>%
filter(date > "2023-06-05") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meanDO, colour = Site)) + geom_line()+
theme_bw()+ylab("Daily Mean Dissolved Oxygen (mg / L)")+xlab("Date")+
scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E"))+
theme(axis.title.y=element_text())+
theme(
text = element_text(size = 14))
```{r, echo=FALSE}
#Plot DO
avergage_DO_plot <- averageDO %>%
filter(date > "2023-06-05") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meanDO, colour = Site)) + geom_line()+
theme_bw()+ylab("Daily Mean Dissolved Oxygen (mg / L)")+xlab("Date")+
scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E"))+
theme(axis.title.y=element_text())+
theme(
text = element_text(size = 14))
ggplotly(avergage_DO_plot)
avergage_DO_plot
#Only caclulate the days I want
chelav <- chelav %>% filter(date > "2023-06-05")
thornav <- thornav %>% filter(date > "2023-06-05")
hoodav <- hoodav %>% filter(date > "2023-06-05")
manav <- manav %>% filter(date > "2023-06-05")
totav <- totav %>% filter(date > "2023-06-05")
#Add site to the average dfs
chelav <- chelav %>% mutate(Site = "Eld_Inlet, Chelsea")
thornav <- thornav %>% mutate(Site = "Thorndyke")
manlav <- manav %>% mutate(Site = "Manchester")
hoodav <- hoodav %>% mutate(Site = "Hood_Head")
totav <- totav %>%  mutate(Site = "Totten_Inlet")
#merge the two sites temperature data to plot
alldat <- bind_rows(allcheldat, allthorndat, allmandat, allhooddat, alltotdat)
allavdat <- bind_rows(chelav, thornav, hoodav, manav, totav)
dailyaverages <- alldat
alldat$date <- as.Date(alldat$datetime)
averagetemps <- alldat %>% group_by(date, Site) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
averageDO <- alldat %>% group_by(date, Site) %>% summarise(meanDO=mean(DO_mgL, na.rm = TRUE))
#Plot DO
avergage_DO_plot <- averageDO %>%
filter(date > "2023-06-05") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meanDO, colour = Site)) + geom_line()+
theme_bw()+ylab("Daily Mean Dissolved Oxygen (mg / L)")+xlab("Date")+
scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E"))+
theme(axis.title.y=element_text())+
theme(
text = element_text(size = 14))
averageDO <- alldat %>% group_by(date, Site) %>% summarise(meanDO=mean(DO_mgL, na.rm = TRUE))
View(averageDO)
#Plot DO
avergage_DO_plot <- averageDO %>%
filter(date > "2023-06-05") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meanDO, colour = Site)) + geom_line()+
theme_bw()+ylab("Daily Mean Dissolved Oxygen (mg / L)")+xlab("Date")+
scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E","Red"))+
theme(axis.title.y=element_text())+
theme(
text = element_text(size = 14))
avergage_DO_plot
averagetemps <- averagetemps %>%
filter(date > "2023-06-05") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meantemp, colour = Site)) + geom_line()+
theme_bw()+ylab("Daily Mean Temperature (°C)")+xlab("Date")+
scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E", "red"))+
theme(text=element_text(),
axis.title.y=element_text())
averagetemps
#
#Sumarise the data
#turn this into a loop that will do this for each of the cvs files that I have in the data folder
thorndat <- read.csv(here("Data","allthorndat_tides.csv"))#Read in the data
#Obtain daily mean data - this should probably be done in a separate script and this should be saved for the website only group_by(date) %>%
summarise(meantemp = mean(Temp_C, na.rm = TRUE),
meanDO = mean(DO_mgL[water_level > -0.5], na.rm = TRUE))#Filtered to only obtain data when the sensor was wet
#Sumarise the data
#turn this into a loop that will do this for each of the cvs files that I have in the data folder
cheldat <- read.csv(here("Data", "allelddat_tides.csv"))#Read in the data
cheldat$datetime <- mdy_hm(cheldat$Date.Time..GMT.07.00)
#Sumarise the data
#turn this into a loop that will do this for each of the cvs files that I have in the data folder
cheldat <- read.csv(here("Data", "allelddat_tides.csv"))#Read in the data
cheldat$datetime <- mdy_hm(cheldat$Date.Time..GMT.07.00)
#Obtain daily mean data - this should probably be done in a separate script and this should be saved for the website only
chelav <- allcheldat %>% group_by(date) %>% summarise(
meantemp = mean(Temp_C, na.rm = TRUE),
meanDO = mean(DO_mgL[water_level > -0.5], na.rm = TRUE)#Filtered to only obtain data when the sensor was wet
)
#Obtain daily mean data - this should probably be done in a separate script and this should be saved for the website only
chelav <- cheldat %>% mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
group_by(date) %>%
summarise(meantemp = mean(Temp_C, na.rm = TRUE),
meanDO = mean(DO_mgL[water_level > -0.5], na.rm = TRUE))
View(cheldat)
chaldatold <- read.csv(here("Data", "chelsea_Do_Temp.csv"))#Read in the data
dim(chaldatold)
dim(cheldat)
#Sumarise the data
#turn this into a loop that will do this for each of the cvs files that I have in the data folder
cheldat <- read.csv(here("Data", "allcheldat_tides"))#Read in the data
#Sumarise the data
#turn this into a loop that will do this for each of the cvs files that I have in the data folder
cheldat <- read.csv(here("Data", "allcheldat_tides.csv"))#Read in the data
dim(cheldat)
dim(oldcheldat)
chaldatold <- read.csv(here("Data", "chelsea_Do_Temp.csv"))#Read in the data
dim(oldcheldat)
dim(chaldatold)
View(alltotdat)
temp_hottot <- alltotdat %>% filter(Temp_C>17)
View(temp_hottot)
#Plot DO
avergage_DO_plot <- averageDO %>%
filter(date > "2023-06-06") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meanDO, colour = Site)) + geom_line()+
theme_bw()+ylab("Daily Mean Dissolved Oxygen (mg / L)")+xlab("Date")+
scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E","Red"))+
theme(axis.title.y=element_text())+
theme(
text = element_text(size = 14))
avergage_DO_plot
averagetemps
averagetemps <- averagetemps %>%
filter(date > "2023-06-06") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meantemp, colour = Site)) + geom_line()+
theme_bw()+ylab("Daily Mean Temperature (°C)")+xlab("Date")+
scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E", "red"))+
theme(text=element_text(),
axis.title.y=element_text())
averagetemps
library(tidyverse)
averagetemps <- averagetemps %>%
filter(date > "2023-06-06") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meantemp, colour = Site)) + geom_line()+
theme_bw()+ylab("Daily Mean Temperature (°C)")+xlab("Date")+
scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E", "red"))+
theme(text=element_text(),
axis.title.y=element_text())
averagetemps <- averagetemps %>%
filter(date > "2023-06-05") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meantemp, colour = Site)) + geom_line()+
theme_bw()+ylab("Daily Mean Temperature (°C)")+xlab("Date")+
scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E", "red"))+
theme(text=element_text(),
axis.title.y=element_text())
g
average_temp_plot <- averagetemps %>%
filter(date > "2023-06-05") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meantemp, colour = Site)) + geom_line()+
theme_bw()+ylab("Daily Mean Temperature (°C)")+xlab("Date")+
scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E", "red"))+
theme(text=element_text(),
axis.title.y=element_text())
averagetemps <- alldat %>% group_by(date, Site) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
average_temp_plot <- averagetemps %>%
filter(date > "2023-06-05") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meantemp, colour = Site)) + geom_line()+
theme_bw()+ylab("Daily Mean Temperature (°C)")+xlab("Date")+
scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E", "red"))+
theme(text=element_text(),
axis.title.y=element_text())
ggplotly(average_temp_plot)
average_temp_plot
average_temp_plot <- averagetemps %>%
filter(date > "2023-06-06") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meantemp, colour = Site)) + geom_line()+
theme_bw()+ylab("Daily Mean Temperature (°C)")+xlab("Date")+
scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E", "red"))+
theme(text=element_text(),
axis.title.y=element_text())
average_temp_plot
View(totav)
View(alltotdat)
#Sumarise the data
#turn this into a loop that will do this for each of the cvs files that I have in the data folder
hooddat <- read.csv(here("Data", "hood_Do_Temp.csv"))#Read in the data
hooddat$datetime <- mdy_hm(hooddat$Date.Time..GMT.07.00)
View(hooddat)
totdadat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temp_C, Dissolved_Oxygen_mg_l, Site, Tide..ft.) %>%
mutate(DO_mgL = Dissolved_Oxygen_mg_l,
water_level = Tide..ft. )
totdadat <- totdadat %>%
mutate(datetime = parse_date_time(Date.Time..GMT.07.00, orders = c("mdy_HM", "ymd_HM")))#Checks both date formats
totdadat$date <- as.Date(totdadat$datetime)
totav_ind <- totdadat %>% group_by(date) %>% summarise(
meantemp = mean(Temp_C, na.rm = TRUE),
meanDO = mean(DO_mgL[water_level > -2], na.rm = TRUE)
)
tot_avergage_DO_plot <- totav_ind %>%
filter(date > "2023-06-08") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meanDO, colour = Site)) + geom_line()+
theme_bw()+ylab("Daily Mean Dissolved Oxygen (mg / L)")+xlab("Date")+
theme(axis.title.y=element_text())+
theme(
text = element_text(size = 14))
tot_avergage_DO_plot
totdadat <- read.csv(here("Data","Totten_LOW_DO_tide.csv"))%>%
select(Date.Time..GMT.07.00, Temp_C, Dissolved_Oxygen_mg_l, Site, Tide..ft.) %>%
mutate(DO_mgL = Dissolved_Oxygen_mg_l,
water_level = Tide..ft. )
totdadat <- totdadat %>%
mutate(datetime = parse_date_time(Date.Time..GMT.07.00, orders = c("mdy_HM", "ymd_HM")))#Checks both date formats
totdadat$date <- as.Date(totdadat$datetime)
totav_ind <- totdadat %>% group_by(date) %>% summarise(
meantemp = mean(Temp_C, na.rm = TRUE),
meanDO = mean(DO_mgL[water_level > -2], na.rm = TRUE)
)
tot_avergage_DO_plot <- totav_ind %>%
filter(date > "2023-06-08") %>% #filter(date < "2023-10-17") %>%
ggplot(aes(x= date , y = meanDO)) + geom_line()+
theme_bw()+ylab("Daily Mean Dissolved Oxygen (mg / L)")+xlab("Date")+
theme(axis.title.y=element_text())+
theme(
text = element_text(size = 14))
tot_avergage_DO_plot
