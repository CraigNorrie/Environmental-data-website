---
title: "Eld Inlet environmental data"
format: html
editor: source
---


This site is located in South Puget Sound. Environmental data is collected from an intertidal shellfish farm. Sensors were attached in the intertidal zone at a tidal height of 0 m

![Chelsea Farms, Eld Inlet,  Washington](/Images/Chelsea.jpg)

```{r, include=FALSE}
#Load the packages required to make a local scale map
library(tidyverse)
library(leaflet)#package to make interactive web
library(leaflet.providers)#allows you to add third party basemaps
library(here)
library(plotly)
library(lubridate)
```

## Site information

```{r, echo=FALSE, results='hide'}
aquaculturemap_chel <- leaflet() %>% 
  addProviderTiles(providers$Esri.OceanBasemap) %>%
  addMarkers(lng = -122.960441,lat = 47.127609, popup = "South Sound - Chelsea Farms")
```

```{r, echo=FALSE}
aquaculturemap_chel
```

<Br>Raw data can be found [here](https://github.com/CraigNorrie/Environmental-data-website/tree/main/Data)<Br>

```{r, echo=FALSE, results='hide'}
#Sumarise the data
#turn this into a loop that will do this for each of the cvs files that I have in the data folder
elddat_UW <- read.csv(here("Data/Eld", "UW_ELD_DO_TEMP_WATERLEVEL_2023_2024.csv"))#Read in the data
elddat_PSI <- read.csv(here("Data/Eld", "PSI_ELD_DO_TEMP_WATERLEVEL_Lowerflipbags_2023_2024.csv")) %>%  #Read in the data
  select(Date.Time..GMT.07.00, Temperature_C, Dissolved.Oxygen_mg.l, Tide_ft)
#chaldat_exo_psi <- read.csv(here("Data/Eld", "PSI_ELD_DO_TEMP_WATERLEVEL_Lowerflipbags_2023_2024.csv"))#Read in the data
elddat_UW$datetime <- mdy_hm(elddat_UW$Date.Time..GMT.07.00)
elddat_PSI$datetime <- mdy_hm(elddat_PSI$Date.Time..GMT.07.00)
#input data from 
#Obtain daily mean data - this should probably be done in a separate script and this should be saved for the website only
eldav_UW <- elddat_UW %>% mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
  group_by(date) %>%
  summarise(meantemp = mean(Temp_C, na.rm = TRUE),
    meanDO = mean(DO_mgL[water_level > -0.5], na.rm = TRUE))

eldav_PSI <- elddat_PSI %>% mutate(date = as.Date(Date.Time..GMT.07.00, format = "%m/%d/%Y %H:%M")) %>%
  group_by(date) %>%
  summarise(meantemp = mean(Temperature_C, na.rm = TRUE),
    meanDO = mean(Dissolved.Oxygen_mg.l[Tide_ft > -0.5], na.rm = TRUE))
```


## Temperature data

Temperature data was collected from hobo DO and temp logger.  Data was collected every 15 minutes and daily averages were calculated. Note this data included information from when individuals were out of the water. <Br>

The hobo logger was lost from this stite between August and October.

```{r, echo=FALSE, results='hide'}
eld_temp_plot <- ggplot() +
  geom_line(data = eldav_UW, aes(x = date, y = meantemp, color = "UW")) +
  geom_line(data = eldav_PSI, aes(x = date, y = meantemp, color = "PSI")) +
  xlab("Date") +
  ylab("Temperature (Â°C)") +
  theme_bw() +
  scale_color_manual(name = "Source", values = c("UW" = "blue", "PSI" = "red")) # Optional: Custom colors


```


```{r, echo = FALSE}
ggplotly(eld_temp_plot)
```

## Disolved oxygen data


Dissolved oxygen data was collected using a hobo DO and temperature logger. Data was collected every 15 minutes and daily averages were calculated. Note this data includes periods of tidal emersion. 

```{r, echo=FALSE, results='hide'}
chel_do_plot <- ggplot() +
  geom_line(data = eldav_UW, aes(x = date, y = meanDO, color = "UW")) +
  geom_line(data = eldav_PSI, aes(x = date, y = meanDO, color = "PSI")) +
  xlab("Date") +
  ylab("Dissolved Oxygen (mg/L)") +
  theme_bw() +
  scale_color_manual(
    name = "Source",
    values = c("UW" = "blue", "PSI" = "red"),
    labels = c("UW" = "UW Data", "PSI" = "PSI Data")
  )

ggplotly(chel_do_plot)

```

```{r, echo = FALSE}
ggplotly(chel_do_plot)
```

```{r}
#carbchem %>% filter(Site == "Chelsea") %>% select(-c(1,2)) %>%  arrange(Year, Month)
```

