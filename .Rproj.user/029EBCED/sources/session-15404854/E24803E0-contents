##Script to analyse temperature data from oyster field sites
#Load packages
library(tidyverse)
library(lubridate)
library(here)
##read in the data 
#Thorndyke
thorndat_junjuly <- read.csv(here("Data", "Thorndyke_5_june_to_2_aug_2023.csv"))
thorndat_julyaug <- read.csv(here("Data", "Thorndyke_5_june_to_2_aug_2023.csv"))
thorndat_augoct <- read.csv(here("Data", "Thorndyke_aug2_october23_2023.csv"))
#Chelsea
cheldat_mayaug <- read.csv(here("Data", "Chelsea_Farm_10_may_to_2_Aug_2023.csv"))
cheldat_augoct <- read.csv(here("Data", "Chelsea_Farm__1AUG_october23.csv")) %>% filter(Temp_C > -10)
#hood Head
hooddat_mayjuly <- read.csv(here("Data", "Hood_Head_12_may_to_17July.csv"))
#manchester
mandat_apraug <- read.csv(here("Data", "Manchester_15_april_8_August.csv"))
mandat_augoct <- read.csv(here("Data", "Manchester_8AUG_1NOV.csv")) %>% filter(Temp_C > -10)

##Merge the datasets
allthorndat <- bind_rows(thornjun_julydat, thorndat_julyaug, thorndat_augoct)
allcheldat <- bind_rows(cheldat_mayaug, cheldat_augoct)
allhooddat <- hooddat_mayjuly
allmandat <- bind_rows(mandat_apraug, mandat_augoct)


#Set the first column as date
allthorndat$datetime <- mdy_hm(allthorndat$Date.Time..GMT.07.00)
str(thornjun_julydat)
allcheldat$datetime  <- mdy_hm(allcheldat$Date.Time..GMT.07.00)
str(chelmay_juldat)
allhooddat$datetime  <- mdy_hm(allhooddat$Date.Time..GMT.07.00)
allmandat$datetime  <- mdy_hm(allmandat$Date.Time..GMT.07.00)
#add a site columin to each of the DFs
allcheldat <- allcheldat %>% mutate(Site = "Chelsea")
allthorndat <- allthorndat %>% mutate(Site = "Thorndyke")
allhooddat <- allhooddat %>% mutate(Site = "Hood_Head")
allmandat <- allmandat %>% mutate(Site = "Manchester")
#add a date column to the two dfs
allcheldat$date <- as.Date(allcheldat$datetime)
allthorndat$date <- as.Date(allthorndat$datetime)
allhooddat$date <- as.Date(allhooddat$datetime)
allmandat$date <- as.Date(allmandat$datetime)
#calculate averages
chelav <- allcheldat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
thornav <- allthorndat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
manav <- allmandat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
hoodav <- allhooddat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))
#Only caclulate the days I want
chelav <- chelav %>% filter(date > "2023-06-05")
thornav <- thornav %>% filter(date > "2023-06-05")
hoodav <- hoodav %>% filter(date > "2023-06-05")
manav <- manav %>% filter(date > "2023-06-05")
#calculate cumulative degree days
chelav$degdays <- cumsum(chelav$meantemp)
thornav$degdays <- cumsum(thornav$meantemp)
#Add site to the average dfs
chelav <- chelav %>% mutate(Site = "Chelsea")
thornav <- thornav %>% mutate(Site = "Thorndyke")
manlav <- manav %>% mutate(Site = "Manchester")
hoodav <- hoodav %>% mutate(Site = "Hood_Head")
#merge the two sites temperature data to plot
alldat <- bind_rows(allcheldat, allthorndat, allmandat, allhooddat)
allavdat <- bind_rows(chelav, thornav, hoodav, manav)
#plot this
alldat %>% filter(datetime > "2023-06-05 14:37:00") %>% 
  ggplot(aes(x = datetime, y = Temp_C, colour = Site))+geom_line()+theme_classic()
dailyaverages <- alldat
alldat$date <- as.Date(alldat$datetime) 
averagetemps <- alldat %>% group_by(date, Site) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))
averageDO <- alldat %>% group_by(date, Site) %>% summarise(meanDO=mean(DO_mgL, na.rm = TRUE))
#plot the average temps
averagetemps %>% 
  filter(date > "2023-06-05") %>% filter(date < "2023-10-17") %>% 
           ggplot(aes(x= date , y = meantemp, colour = Site)) + geom_line(size=1)+
  theme_bw()+ylab("Daily Mean Temperature (°C)")+xlab("Date")+
  scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E"))+
  theme(text=element_text(),
        axis.title.y=element_text())
#Plot DO
averageDO %>% 
  filter(date > "2023-06-05") %>% filter(date < "2023-10-17") %>% 
  ggplot(aes(x= date , y = meanDO, colour = Site)) + geom_line(size=1)+
  theme_bw()+ylab("Daily Mean Dissolved Oxygen (mg / L)")+xlab("Date")+
  scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E"))+
  theme(axis.title.y=element_text())
  
#####plot cumulative deg days
allavdat %>% ggplot(aes(x=date, y=degdays, colour = Site))+geom_line(size=1)


# Figures for presentations -----------------------------------------------
#Plot DO
averageDO %>% 
  filter(date > "2023-06-05") %>% filter(date < "2023-10-17") %>% 
  ggplot(aes(x= date , y = meanDO, colour = Site)) + geom_line(size=1)+
  theme_bw()+ylab("Daily Mean Dissolved Oxygen (mg / L)")+xlab("Date")+
  scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E"))+
  theme(axis.title.y=element_text())+
  theme(
    text = element_text(size = 14))


averagetemps %>% 
  filter(date > "2023-06-05") %>% filter(date < "2023-10-17") %>% 
  ggplot(aes(x= date , y = meantemp, colour = Site)) + geom_line(size=1)+
  theme_bw()+ylab("Daily Mean Temperature (°C)")+xlab("Date")+
  scale_color_manual(values=c("#B3C863","#756A8C","#037D64","#CEB08E"))+
  theme(text=element_text(),
        axis.title.y=element_text())+
  theme(
    text = element_text(size = 14))


