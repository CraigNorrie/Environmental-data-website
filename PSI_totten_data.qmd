---
title: "Totten Inlet environmental data"
format: html
editor: source
---


```{r, include=FALSE}
#Load the packages required to make a local scale map
library(tidyverse)
library(leaflet)#package to make interactive web
library(leaflet.providers)#allows you to add third party basemaps
library(here)
library(plotly)
library(lubridate)
```


This site is located in South Puget Sound. Environmental data is collected from an intertidal shellfish farm. Data was collected by Pacific Shellfish Institute. Contact [Andy Suhrbier](suhrbier@pacshell.org) for more info. Data was collected in the intertidal at two tidal heights. Low and high elevation data was collected at a tital height of -0.61 m (-2ft) and at 0.91 m (+3 ft). <Br>
Raw data can be found [here](https://github.com/CraigNorrie/Environmental-data-website/blob/main/Data/Chelsea_Upper_Bag_Temp_PSI_2023_2024.csv) for high elevation and [here](https://github.com/CraigNorrie/Environmental-data-website/blob/main/Data/Chelsea_Low_Bag_Temp_PSI_2023_2024.csv) for low elevation. 



```{r, echo=FALSE, results='hide'}
##PSI chelsea data
cheldat_PSI_low <- read.csv(here("Data", "Chelsea_Low_Bag_Temp_PSI_2023_2024.csv"))#Read in the data
#Obtain daily mean data - this should probably be done in a seperate script and this should be saved for the website only
cheldat_PSI_low$datetime <- mdy_hm(cheldat_PSI_low$Date.Time..GMT.07.00)
cheldat_PSI_low$date <- as.Date(cheldat_PSI_low$datetime)
#Obtain daily mean data - this should probably be done in a seperate script and this should be saved for the website only
cheldat_PSI_low_dailymean_temps <- cheldat_PSI_low %>%
  mutate(
    date = as.Date(date, format = "%Y-%m-%d"),
    elevation = "low"  # Add the elevation column with all values set to "low"
  ) %>%
  group_by(date, elevation) %>%
  summarise(meantemp = mean(Temp_C, na.rm = TRUE), .groups = 'drop')

#cheldat_PSI_low_dailymean_temps %>% 
  #ggplot(aes(x = date, y = meantemp))+geom_line()+xlab("Date")+ylab("Temperature (°C)")+theme_bw()


cheldat_PSI_high <- read.csv(here("Data", "Chelsea_upper_Bag_Temp_PSI_2023_2024.csv"))#Read in the data
#Obtain daily mean data - this should probably be done in a seperate script and this should be saved for the website only
cheldat_PSI_high$datetime <- mdy_hm(cheldat_PSI_high$Date.Time..GMT.07.00)
cheldat_PSI_high$date <- as.Date(cheldat_PSI_high$datetime)
#Obtain daily mean data - this should probably be done in a seperate script and this should be saved for the website only
cheldat_PSI_high_dailymean_temps <- cheldat_PSI_high %>%
  mutate(
    date = as.Date(date, format = "%Y-%m-%d"),
    elevation = "High"  # Set the elevation column with all values to "High"
  ) %>%
  group_by(date, elevation) %>%
  summarise(meantemp = mean(Temp_C, na.rm = TRUE), .groups = 'drop')


#Create an overall graph with everytihg on it
#Stack the data so that there is a low and high 

tottendatall <- bind_rows(cheldat_PSI_low_dailymean_temps, cheldat_PSI_high_dailymean_temps)

tottenallplot <- tottendatall %>% ggplot(aes(x=date, y = meantemp, colour = elevation))+geom_line()+xlab("Date")+ylab("Temperature (°C)")+theme_bw()

```

```{r, echo=FALSE,}
ggplotly(tottenallplot)
```

