{"title":"Environmental data from aquaculture","markdown":{"yaml":{"output":"html_document","editor_options":{"chunk_output_type":"console"}},"headingText":"Environmental data from aquaculture","containsRefs":false,"markdown":"\n\n```{r, include=FALSE}\n#Load the packages required for this \nlibrary(tidyverse)\nlibrary(leaflet)#package to make interactive web\nlibrary(leaflet.providers)#allows you to add third party basemaps\nlibrary(here)\nlibrary(plotly)\nlibrary(htmltools)\n```\n\n\nData collected from aquaculture locations throughout Washington. Data displayed here has not been quality controlled. Contact the providers of the data for more information. \n\n## Map of sites\n\nClick each location on this map to find a list of the data that has been collected at each site and the organisation that has collected this data.\n\n```{r, echo = FALSE, results = \"hide\", include=FALSE}\n###Create the map\n#Read in site info\nsiteinfo <- read.csv(here(\"Site_info.csv\"))\n#Create the map - in the future set all of the variables in a csv to be read in \naquaculturemap <- leaflet() %>% \n  addProviderTiles(providers$Esri.OceanBasemap) %>% \n  addMarkers(lng = siteinfo$Long, lat = siteinfo$Lat,\n             popup = lapply(seq(nrow(siteinfo)), function(i) {\n               HTML(paste0(\"<strong>\", siteinfo$Site_name[i], \"</strong><br>\",\n                           \"Availble data: \", siteinfo$Data[i], \"<br>\",\n                           \"Organisation: \", siteinfo$Organisation[i], \"<br>\",\n                           \"Contact: \", siteinfo$Contact[i]))\n             }))\n\n```\n\n```{r, echo = FALSE}\naquaculturemap\n```\n\n## Comparison of data across sites\n\n### Disolved oxygen\n\n```{r, include=FALSE}\n#Create averages\n##read in the data \nallthorndat <- read.csv(here(\"Data\",\"thorn_Do_Temp.csv\"))\nallcheldat <- read.csv(here(\"Data\",\"chelsea_Do_Temp.csv\"))\nallhooddat <- read.csv(here(\"Data\",\"hood_Do_Temp.csv\"))\nallmandat <- read.csv(here(\"Data\",\"man_Do_Temp.csv\"))\n\n\n#Set the first column as date\nallthorndat$datetime <- mdy_hm(allthorndat$Date.Time..GMT.07.00)\nallcheldat$datetime  <- mdy_hm(allcheldat$Date.Time..GMT.07.00)\nallhooddat$datetime  <- mdy_hm(allhooddat$Date.Time..GMT.07.00)\nallmandat$datetime  <- mdy_hm(allmandat$Date.Time..GMT.07.00)\n#add a site columin to each of the DFs\nallcheldat <- allcheldat %>% mutate(Site = \"Chelsea\")\nallthorndat <- allthorndat %>% mutate(Site = \"Thorndyke\")\nallhooddat <- allhooddat %>% mutate(Site = \"Hood_Head\")\nallmandat <- allmandat %>% mutate(Site = \"Manchester\")\n#add a date column to the two dfs\nallcheldat$date <- as.Date(allcheldat$datetime)\nallthorndat$date <- as.Date(allthorndat$datetime)\nallhooddat$date <- as.Date(allhooddat$datetime)\nallmandat$date <- as.Date(allmandat$datetime)\n#calculate averages\nchelav <- allcheldat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))\nthornav <- allthorndat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))\nmanav <- allmandat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))\nhoodav <- allhooddat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))\n#Only caclulate the days I want\nchelav <- chelav %>% filter(date > \"2023-06-05\")\nthornav <- thornav %>% filter(date > \"2023-06-05\")\nhoodav <- hoodav %>% filter(date > \"2023-06-05\")\nmanav <- manav %>% filter(date > \"2023-06-05\")\n#calculate cumulative degree days\nchelav$degdays <- cumsum(chelav$meantemp)\nthornav$degdays <- cumsum(thornav$meantemp)\n#Add site to the average dfs\nchelav <- chelav %>% mutate(Site = \"Chelsea\")\nthornav <- thornav %>% mutate(Site = \"Thorndyke\")\nmanlav <- manav %>% mutate(Site = \"Manchester\")\nhoodav <- hoodav %>% mutate(Site = \"Hood_Head\")\n#merge the two sites temperature data to plot\nalldat <- bind_rows(allcheldat, allthorndat, allmandat, allhooddat)\nallavdat <- bind_rows(chelav, thornav, hoodav, manav)\ndailyaverages <- alldat\nalldat$date <- as.Date(alldat$datetime) \naveragetemps <- alldat %>% group_by(date, Site) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))\naverageDO <- alldat %>% group_by(date, Site) %>% summarise(meanDO=mean(DO_mgL, na.rm = TRUE))\n\n#Plot DO\navergage_DO_plot <- averageDO %>% \n  filter(date > \"2023-06-05\") %>% filter(date < \"2023-10-17\") %>% \n  ggplot(aes(x= date , y = meanDO, colour = Site)) + geom_line()+\n  theme_bw()+ylab(\"Daily Mean Dissolved Oxygen (mg / L)\")+xlab(\"Date\")+\n  scale_color_manual(values=c(\"#B3C863\",\"#756A8C\",\"#037D64\",\"#CEB08E\"))+\n  theme(axis.title.y=element_text())+\n  theme(\n    text = element_text(size = 14))\n\n```\n\n```{r, echo=FALSE}\nggplotly(avergage_DO_plot)\n```\n\n### Temperature\nNote that these daily averages include time that individuals were out of the water at low tide sites.\n\n```{r, include = FALSE}\naveragetemps <- averagetemps %>% \n  filter(date > \"2023-06-05\") %>% filter(date < \"2023-10-17\") %>% \n           ggplot(aes(x= date , y = meantemp, colour = Site)) + geom_line(size=1)+\n  theme_bw()+ylab(\"Daily Mean Temperature (Â°C)\")+xlab(\"Date\")+\n  scale_color_manual(values=c(\"#B3C863\",\"#756A8C\",\"#037D64\",\"#CEB08E\"))+\n  theme(text=element_text(),\n        axis.title.y=element_text())\n```\n\n```{r, echo=FALSE}\nggplotly(averagetemps)\n```\n\nGithub page created by Craig Norrie. Last updated 27th April 2024. This would be an excellent location to have data hosted from multiple partners. ","srcMarkdownNoYaml":"\n\n```{r, include=FALSE}\n#Load the packages required for this \nlibrary(tidyverse)\nlibrary(leaflet)#package to make interactive web\nlibrary(leaflet.providers)#allows you to add third party basemaps\nlibrary(here)\nlibrary(plotly)\nlibrary(htmltools)\n```\n\n# Environmental data from aquaculture\n\nData collected from aquaculture locations throughout Washington. Data displayed here has not been quality controlled. Contact the providers of the data for more information. \n\n## Map of sites\n\nClick each location on this map to find a list of the data that has been collected at each site and the organisation that has collected this data.\n\n```{r, echo = FALSE, results = \"hide\", include=FALSE}\n###Create the map\n#Read in site info\nsiteinfo <- read.csv(here(\"Site_info.csv\"))\n#Create the map - in the future set all of the variables in a csv to be read in \naquaculturemap <- leaflet() %>% \n  addProviderTiles(providers$Esri.OceanBasemap) %>% \n  addMarkers(lng = siteinfo$Long, lat = siteinfo$Lat,\n             popup = lapply(seq(nrow(siteinfo)), function(i) {\n               HTML(paste0(\"<strong>\", siteinfo$Site_name[i], \"</strong><br>\",\n                           \"Availble data: \", siteinfo$Data[i], \"<br>\",\n                           \"Organisation: \", siteinfo$Organisation[i], \"<br>\",\n                           \"Contact: \", siteinfo$Contact[i]))\n             }))\n\n```\n\n```{r, echo = FALSE}\naquaculturemap\n```\n\n## Comparison of data across sites\n\n### Disolved oxygen\n\n```{r, include=FALSE}\n#Create averages\n##read in the data \nallthorndat <- read.csv(here(\"Data\",\"thorn_Do_Temp.csv\"))\nallcheldat <- read.csv(here(\"Data\",\"chelsea_Do_Temp.csv\"))\nallhooddat <- read.csv(here(\"Data\",\"hood_Do_Temp.csv\"))\nallmandat <- read.csv(here(\"Data\",\"man_Do_Temp.csv\"))\n\n\n#Set the first column as date\nallthorndat$datetime <- mdy_hm(allthorndat$Date.Time..GMT.07.00)\nallcheldat$datetime  <- mdy_hm(allcheldat$Date.Time..GMT.07.00)\nallhooddat$datetime  <- mdy_hm(allhooddat$Date.Time..GMT.07.00)\nallmandat$datetime  <- mdy_hm(allmandat$Date.Time..GMT.07.00)\n#add a site columin to each of the DFs\nallcheldat <- allcheldat %>% mutate(Site = \"Chelsea\")\nallthorndat <- allthorndat %>% mutate(Site = \"Thorndyke\")\nallhooddat <- allhooddat %>% mutate(Site = \"Hood_Head\")\nallmandat <- allmandat %>% mutate(Site = \"Manchester\")\n#add a date column to the two dfs\nallcheldat$date <- as.Date(allcheldat$datetime)\nallthorndat$date <- as.Date(allthorndat$datetime)\nallhooddat$date <- as.Date(allhooddat$datetime)\nallmandat$date <- as.Date(allmandat$datetime)\n#calculate averages\nchelav <- allcheldat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))\nthornav <- allthorndat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))\nmanav <- allmandat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))\nhoodav <- allhooddat %>% group_by(date) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE), meanDO=mean(DO_mgL, na.rm = TRUE))\n#Only caclulate the days I want\nchelav <- chelav %>% filter(date > \"2023-06-05\")\nthornav <- thornav %>% filter(date > \"2023-06-05\")\nhoodav <- hoodav %>% filter(date > \"2023-06-05\")\nmanav <- manav %>% filter(date > \"2023-06-05\")\n#calculate cumulative degree days\nchelav$degdays <- cumsum(chelav$meantemp)\nthornav$degdays <- cumsum(thornav$meantemp)\n#Add site to the average dfs\nchelav <- chelav %>% mutate(Site = \"Chelsea\")\nthornav <- thornav %>% mutate(Site = \"Thorndyke\")\nmanlav <- manav %>% mutate(Site = \"Manchester\")\nhoodav <- hoodav %>% mutate(Site = \"Hood_Head\")\n#merge the two sites temperature data to plot\nalldat <- bind_rows(allcheldat, allthorndat, allmandat, allhooddat)\nallavdat <- bind_rows(chelav, thornav, hoodav, manav)\ndailyaverages <- alldat\nalldat$date <- as.Date(alldat$datetime) \naveragetemps <- alldat %>% group_by(date, Site) %>% summarise(meantemp=mean(Temp_C, na.rm = TRUE))\naverageDO <- alldat %>% group_by(date, Site) %>% summarise(meanDO=mean(DO_mgL, na.rm = TRUE))\n\n#Plot DO\navergage_DO_plot <- averageDO %>% \n  filter(date > \"2023-06-05\") %>% filter(date < \"2023-10-17\") %>% \n  ggplot(aes(x= date , y = meanDO, colour = Site)) + geom_line()+\n  theme_bw()+ylab(\"Daily Mean Dissolved Oxygen (mg / L)\")+xlab(\"Date\")+\n  scale_color_manual(values=c(\"#B3C863\",\"#756A8C\",\"#037D64\",\"#CEB08E\"))+\n  theme(axis.title.y=element_text())+\n  theme(\n    text = element_text(size = 14))\n\n```\n\n```{r, echo=FALSE}\nggplotly(avergage_DO_plot)\n```\n\n### Temperature\nNote that these daily averages include time that individuals were out of the water at low tide sites.\n\n```{r, include = FALSE}\naveragetemps <- averagetemps %>% \n  filter(date > \"2023-06-05\") %>% filter(date < \"2023-10-17\") %>% \n           ggplot(aes(x= date , y = meantemp, colour = Site)) + geom_line(size=1)+\n  theme_bw()+ylab(\"Daily Mean Temperature (Â°C)\")+xlab(\"Date\")+\n  scale_color_manual(values=c(\"#B3C863\",\"#756A8C\",\"#037D64\",\"#CEB08E\"))+\n  theme(text=element_text(),\n        axis.title.y=element_text())\n```\n\n```{r, echo=FALSE}\nggplotly(averagetemps)\n```\n\nGithub page created by Craig Norrie. Last updated 27th April 2024. This would be an excellent location to have data hosted from multiple partners. "},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}